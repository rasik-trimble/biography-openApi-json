{
  "openapi": "3.0.1",
  "info": {
    "title": "Campaign Services",
    "description": "# Overview\n\n The Global SKU (Grizzly) Enterprise Services team will be responsible for developing and supporting a suite of tools and services to support the entire range of Global SKU (Grizzly) hardware products.\n\n# Basepath URL\n\n**Stage** - ```https://api-stg.trimble.com/t/trimble.com/gsku-services/1.0/```\n\n\n**Prod** - ```https://api.trimble.com/t/trimble.com/gsku-services/1.0/```\n\n# Authorization\n\nThe service will be secured through API Auth Server. Thus requiring an\n'Authorization' header in all requests. The value of the header can be picked up from Trimble APICloud which will be Bearer token. You have to send a valid\n```Access Token``` in the Authorization header, using the ```Bearer```\nauthentication scheme.\n\nFormat: ```Bearer <access_token>```\n",
    "contact": {
      "name": "GLOBAL-SKU",
      "url": "https://sites.google.com/trimble.com/ttm/teams/global-sku",
      "email": "globalskuserviceschennai-ug@trimble.com"
    },
    "version": "v0.0.1",
    "x-logo": {
      "altText": "Trimble GSKU logo",
      "url": "https://tools.dev.transportation.trimble.com/static/media/Trimble_nav_banner.1e387b5f.png"
    }
  },
  "servers": [
    {
      "url": "https://api-stg.trimble.com/t/trimble.com/gsku-services/1.0",
      "description": "Stage environment"
    }
  ],
  "tags": [
    {
      "name": "Campaign Create",
      "description": "API's related to Managing Campaign"
    },
    {
      "name": "Campaign Create",
      "description": "API's related to Creating Campaign"
    }
  ],
  "paths": {
    "/campaign": {
      "put": {
        "tags": ["Campaign Create"],
        "summary": "Update Campaign",
        "description": "To Update the campaign and related devices",
        "operationId": "updateCampaignDetails",
        "parameters": [
          {
            "name": "UpdateRequest",
            "description": "Should contain the details related to campaign| devices",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successfully updated the campaign details",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" },
          "500": {
            "description": "The dsn supplied for campaign creation are not valid"
          }
        }
      },
      "post": {
        "tags": ["Campaign Create"],
        "summary": "Create Campaign",
        "description": "To Create the campaign",
        "operationId": "createCampaign",
        "parameters": [
          {
            "name": "campaignRequest",
            "description": "Should contain the details related to campaign",
            "required": true
          },
          {
            "name": "createdBy",
            "description": "Should contain the name of the user who is creating the campaign",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully created the campaign",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" },
          "500": {
            "description": "The dsn supplied for campaign creation are not valid"
          }
        }
      }
    },
    "/campaign/campaign-createdBy": {
      "get": {
        "tags": ["Campaign Create"],
        "summary": "GET Campaign CreatedBy List",
        "description": "To get list of campaign createdBy",
        "operationId": "getCampaignCreator",
        "responses": {
          "200": {
            "description": "Successfully fetched the campaign createdBy list",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" }
        }
      }
    },
    "/campaign/campaign-managedBy": {
      "get": {
        "tags": ["Campaign Create"],
        "summary": "GET Campaign ManagedBy List",
        "description": "To get list of campaign mangedBy names",
        "operationId": "getCampaignManagedBy",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Should contain the type of managedBy list requested",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the campaign ManagedBy list",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" }
        }
      }
    },
    "/campaign/campaign-status": {
      "get": {
        "tags": ["Campaign Create"],
        "summary": "GET Campaign Status List",
        "description": "To get list of campaign Status ids,names",
        "operationId": "getCampaignStatusList",
        "responses": {
          "200": {
            "description": "Successfully fetched the campaign Status list",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" }
        }
      }
    },
    "/campaign/devices/cache": {
      "post": {
        "tags": ["cache-controller"],
        "summary": "Create DSN cache",
        "description": "To create cache of DSNs which will be used in the campaign",
        "operationId": "initialiseCache",
        "parameters": [
          {
            "name": "cacheRequest",
            "description": "Request should contain list of DSNs",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CacheRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully initialised cache",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          }
        }
      }
    },
    "/campaign/devices/cache/{cacheId}": {
      "get": {
        "tags": ["cache-controller"],
        "summary": "Get Report",
        "description": "To Get the report based on the supplied Report type",
        "operationId": "getReport",
        "parameters": [
          {
            "name": "cacheId",
            "in": "path",
            "description": "Should contain the UUID which was retunred during create cache",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "Should contain the type of report being requested",
            "required": true,
            "schema": {
              "pattern": "summary|customer|deviceType",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched report",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" }
        }
      }
    },
    "/campaign/devices": {
      "put": {
        "tags": ["cache-controller"],
        "summary": "Remove Devices",
        "description": "To Remove in_use or no_access Dsn form campaign creation",
        "operationId": "removeDevices",
        "parameters": [
          {
            "name": "updateCacheRequest",
            "description": "Should contain the details needed to remove dsn",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCacheRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successfully updated Cache",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameters are invalid" }
        }
      }
    },
    "/campaign/{campaignId}/export": {
      "get": {
        "tags": ["export-controller"],
        "operationId": "exportToCsv",
        "parameters": [
          {
            "name": "filterParams",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CampaignDetailsFilterParams"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/campaign/export": {
      "get": {
        "tags": ["export-controller"],
        "operationId": "exportToCsv_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "filterParams",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CampaignFilterParams" }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/campaign/manage": {
      "get": {
        "tags": ["Campaign Create"],
        "summary": "GET all Campaign Details",
        "description": "To Get the details of the campaign",
        "operationId": "getCampaignDetails",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Should contain the status of the campgin that need to be fetched",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Should contain filter parameters that need to be applied to the campaign details",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "filterParams",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CampaignFilterParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the campaign details",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" },
          "500": {
            "description": "The dsn supplied for campaign creation are not valid"
          }
        }
      },
      "put": {
        "tags": ["Campaign Create"],
        "summary": "Update Campaign Details",
        "description": "To approve or reject or cancel list of campaigns",
        "operationId": "updateCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CampaignUpdateRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successfully updated the campaign",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request body is invalid" },
          "500": {
            "description": "The dsn supplied for campaign creation are not valid"
          }
        }
      }
    },
    "/campaign/manage/{campaignId}": {
      "get": {
        "tags": ["Campaign Create"],
        "summary": "GET Individual Campaign Details",
        "description": "To Get the details of the campaign",
        "operationId": "getCampaignDeviceDetail",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Should contain the id of the campaign whose details need to be fetched",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "filter",
            "description": "Should contain filter parameters that need to be applied to the campaign details",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Page limit",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "filterParams",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CampaignDetailsFilterParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the campaign details",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "400": { "description": "The request parameter is invalid" },
          "500": {
            "description": "The dsn supplied for campaign creation are not valid"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CampaignRequest": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "pattern": "^[a-zA-Z0-9\\s]+$", "type": "string" },
          "cacheId": { "type": "string" },
          "firmwareId": { "type": "integer", "format": "int64" },
          "firmwareType": { "pattern": "bundles|packages", "type": "string" },
          "rollOutType": {
            "pattern": "immediate|onApproval|scheduled",
            "type": "string"
          },
          "rollOutTime": { "type": "integer", "format": "int64" },
          "sizeInBytes": { "type": "number", "format": "double" }
        }
      },
      "UpdateRequest": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "dsn": { "type": "integer", "format": "int32" },
          "status": { "type": "string" }
        }
      },
      "CacheRequest": {
        "required": ["dsn"],
        "type": "object",
        "properties": {
          "dsn": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "object" }
          }
        }
      },
      "UpdateCacheRequest": {
        "required": ["cacheId", "category", "operation"],
        "type": "object",
        "properties": {
          "cacheId": { "type": "string" },
          "category": { "pattern": "in_use|no_access", "type": "string" },
          "operation": { "pattern": "remove", "type": "string" }
        }
      },
      "CampaignDetailsFilterParams": {
        "type": "object",
        "properties": {
          "dsn": { "pattern": "\\s*|[-,0-9]+", "type": "string" }
        }
      },
      "CampaignFilterParams": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "scheduledBy": { "type": "string" },
          "scheduledTimestamp": { "type": "string" },
          "dataSize": { "type": "string" },
          "devicesImpacted": { "type": "string" },
          "managedTimestamp": { "type": "string" },
          "managedBy": { "type": "string" },
          "campaignType": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "CampaignUpdateRequest": {
        "required": ["action", "reason"],
        "type": "object",
        "properties": {
          "campaignId": { "type": "integer", "format": "int64" },
          "action": { "type": "string" },
          "reason": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "Bearer-key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
